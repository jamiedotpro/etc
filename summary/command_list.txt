# git ----------------------------------------------------
git pull origin master

git status

git add .

git commit
or
git commit -m 'commit message'

git log

git push origin master

# 파일명 변경 시
git mv --force podfile Podfile

git config --global user.name "John Doe"
git config --global user.email johndoe@example.com
git clone https://github.com/jamiedotpro/etc.git


# .gitignore 가 제대로 작동되지 않을 때 캐시 삭제
git rm -r --cached .
git add .
git commit -m 'fixed untracked files'


# pip ----------------------------------------------------

# venv 환경이 필요한 프로젝트 폴더로 이동 후 아래 명령어 실행
python -m venv .venv

# 환경 활성화
.venv\Scripts\activate

# 비활성화
deactivate

# 위의 activate 가 실행되지 않을 때 아래의 명령어 입력해서 보안 설정 변경
Set-ExecutionPolicy Unrestricted -Scope CurrentUser
# 그래도 안되면 아래 명령어 입력
Set-ExecutionPolicy Unrestricted -Force


------------------------
# cv2
python -m pip install opencv-python

# pillow
pip install pillow



# 설치 순서 ----------------------------------------------------

visual studio code (마켓 플레이스, 파이썬 상위 4개, 한글언어팩 1개, csv 상위2개)
anaconda (path 체크 필수)
graphic driver 최신 업데이트
cuda 10.0 설치 - (설치 실패하면, cuda - visual studio integration 체크 해제 후 설치)
cuda 폴더에 cudnn 덮어쓰기

command 창에서 cuda 버전 확인
nvcc --version

pip install tensorflow-gpu

pip install keras

(python version downgrade 불필요)

xgboost (python 3.7 용) 설치
D:\>pip install D:\xgboost-0.90-cp37-cp37m-win_amd64.whl



# ms sql ----------------------------------------------------

Sql Server Configuration Manager
- SQL Server 네트워크 구성 -> MSSQLSERVER에 대한 프로토콜 -> TCP/IP. 사용으로 변경
Microsoft SQL Server Management Studio
- Windows 인증으로 먼저 로그인
- 서버 속성 -> 서버 인증 -> SQL Server 및 Windows 인증 모드. 로 변경
- 프로그램 종료. 작업 관리자에서 MSSQLSERVER 서비스 재시작
- 프로그램 실행. SQL Server 인증으로 로그인.

csv 가져오기
DB 우클릭 -> 태스크 -> 데이터 가져오기 -> 데이터 원본(Flat File Source 선택) ->
대상(Microsoft OLE DB Driver for SQL Server 선택)

pip install pymssql


# django ----------------------------------------------------
command 에서...
pip install django
django-admin startproject mysite    # mysite 라는 폴더가 생성되며, 폴더 내에 파일이 자동으로 생성됨
python manage.py startapp polls     # 생성된 폴더로 이동 후 해당 명령 실행. 이후 폴더 위치 동일

mysite 폴더 내 settings.py 파일 안의 ALLOWED_HOSTS = [] 를 수정
==> ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

mysite 와 polls 를 연결 (ip, apps, db, time_zone... 수정)
mysite 폴더 내 settings.py 파일 안의 INSTALLED_APPS = [ 에 추가
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'polls.apps.PollsConfig',       # 여기 추가
]
TIME_ZONE = 'Asia/Seoul' # 한국으로 변경

sqlite 사용하겠다 명시하기
python manage.py migrate

서버 실행
python manage.py runserver 0.0.0.0:8000

실행된 페이지 확인하기
http://localhost:8000
http://localhost:8000/admin/
http://127.0.0.1:8000/admin/

서버 종료
Ctrl + c 키 눌러서 종료

관리자 계정 생성
python manage.py createsuperuser
유저명, 이메일 주소, 비번 입력하라는 대로 진행

다시 서버 실행 후 관리자 페이지에 접속해서 확인해보기

polls 폴더 안의 models.py, admin.py 에 내용 추가

python manage.py makemigrations
python manage.py migrate

서버 실행해서 관리자 페이지에서 추가한 내용 확인하기.