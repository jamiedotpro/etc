# git ----------------------------------------------------
git pull origin master

git status

git add .

git commit
or
git commit -m 'commit message'

git log

git push origin master

# 파일명 변경 시
git mv --force podfile Podfile

git config --global user.name "John Doe"
git config --global user.email johndoe@example.com
git clone https://github.com/jamiedotpro/etc.git


# .gitignore 가 제대로 작동되지 않을 때 캐시 삭제
git rm -r --cached .
git add .
git commit -m 'fixed untracked files'



# pip ----------------------------------------------------

# 아나콘다 설치된 파이썬 버전 확인
conda search python

# 아나콘다 기본 파이썬 버전을 변경
conda install python=3.7.5

# 파이썬 버전 지정해서 아나콘다 가상환경 설정 추가하면, 해당 파이썬 버전이 설치됨
conda create -n venv_dir_name python=3.6.5 anaconda


# venv 환경이 필요한 프로젝트 폴더로 이동 후 아래 명령어 실행
python -m venv .venv
# 파이썬 버전을 지정해서 가상환경을 설정해야 하는 경우 (c:\ProgramData\Anaconda3\pkgs\python-버전폴더...)
해당파이썬버전폴더\python -m venv .venv

# 환경 활성화 (windows, mac/ubuntu)
.venv\Scripts\activate
source .venv/bin/activate

# 비활성화
deactivate

# 위의 activate 가 실행되지 않을 때 아래의 명령어 입력해서 보안 설정 변경
Set-ExecutionPolicy Unrestricted -Scope CurrentUser
# 그래도 안되면 아래 명령어 입력
Set-ExecutionPolicy Unrestricted -Force


# 가상환경 구성 후 아래 명령어들로 설치된 패키지 목록을 저장하고 설치

# 현재 구성한 환경을 requirements.txt 로 만드는 명령어
pip freeze > requirements.txt

# requirements.txt 를 지정한 환경에 설치하는 명령어
pip install -r requirements.txt

# 가상환경 설정한 디렉터리를 이동해야하는 경우
# 파이썬에서 가상환경을 생성할 때 이미 해당 경로가 가상환경 폴더 안 파일에 입력되기 때문에, 생성 뒤 폴더를 다른 곳으로 이동시키면 가상환경 구동이 불가능.
# 해결 방법 : 가상환경폴더의 Scripts 폴더 아래 activate.bat, Activate.ps1, activate 세개의 파일을 수정하면 됨.
#            파일들 안에 VIRTUAL\_ENV 라는 부분이 있는데, 해당 부분을 옮긴 경로로 수정하면 정상적으로 구동이 가능하다.



# conda 가상환경 설정 ----------------------------------------------------

pip3 install -U pip virtualenv
conda create -n venv_tf20 pip python=3.7
conda activate venv_tf20
conda deactivate

# 가상환경 삭제
conda env remove -n venv_tf20

# 가상환경 목록 보기
conda env list



# KoNlpy ----------------------------------------------------
# 자세한 건 공식 홈페이지 참조

# 사전에 업그레이드 필요
python -m pip install --upgrade pip

# mac
# open jdk install, version check
# 시스템 환경설정 -> 개발자의 신원확인을 할 수 없어.. 확인 없이 열기
brew cask install java
java -version

# window
# 아래 파일 받아서 설치
Microsoft Visual C++ 14.0
java-1.8.0-openjdk-1.8.0.232-2.b09.ojdkbuild.windows.x86_64.msi     # https://github.com/ojdkbuild/ojdkbuild 여기서 다운
JPype1-0.7.1-cp37-cp37m-win_amd64.whl                               # KoNlpy 홈페이지에서 받을 수 있음. 버전에 맞춰서 받기

pip3 install konlpy



------------------------
# cv2
python -m pip install opencv-python

# pillow
pip install pillow

# telegram bot
pip install python-telegram-bot --upgrade

# hdbscan
pip install hdbscan

pip install matplotlib --force-reinstall

python -m pip install --user imblearn


아래의 에러가 pip install... 중에 뜨면 이 파일 설치: visualcppbuildtools_full.exe
error: Microsoft Visual C++ 14.0 is required. Get it with "Microsoft Visual C++ Build Tools": https://visualstudio.microsoft.com/downloads/



# gcp flask ----------------------------------------------------
project 만들기
VM 인스턴스 생성 (램은 키워서 만듬. n1-highmem-2(vCPU 2개, 13GB 메모리))
VM 인스턴스의 셸 접속
# 파일 업로드
# 원하는 위치로 이동
# mv _flask_run.py gan/
# 개별 업로드 말고 아래의 winscp 사용하기

python3 _flask_run.py
하면 아래의 라이브러리가 없어서 에러남

apt-get install python3-pip
pip3 install Flask==1.0.2
pip3 install scikit-image

# pip3 install opencv-python
apt-get update
apt-get install -y libsm6 libxext6 libxrender-dev
pip3 install opencv-python

pip3 install tensorflow==1.14
pip3 install keras==2.2.5

pip3 uninstall scipy
pip3 install scipy==1.2.1



VPC 네트워크
방화벽 규칙 설정 (송, 수신 용으로 2개 추가)
외부 아이피 주소 - 유형을 고정으로 변경



아래는 winscp 사용법

putty, puttygen 설치

puttygen 설명 보기
https://newpower.tistory.com/192



# 설치 순서 ----------------------------------------------------

visual studio code (마켓 플레이스, 파이썬 상위 4개, 한글언어팩 1개, csv 상위2개)
anaconda (path 체크 필수)
graphic driver 최신 업데이트
cuda 10.0 설치 - (설치 실패하면, cuda - visual studio integration 체크 해제 후 설치)
cuda 폴더에 cudnn 덮어쓰기

command 창에서 cuda 버전 확인
nvcc --version

pip install tensorflow-gpu

pip install keras

(python version downgrade 불필요)

xgboost (python 3.7 용) 설치
D:\>pip install D:\xgboost-0.90-cp37-cp37m-win_amd64.whl



# ms sql ----------------------------------------------------

Sql Server Configuration Manager
- SQL Server 네트워크 구성 -> MSSQLSERVER에 대한 프로토콜 -> TCP/IP. 사용으로 변경
Microsoft SQL Server Management Studio
- Windows 인증으로 먼저 로그인
- 서버 속성 -> 서버 인증 -> SQL Server 및 Windows 인증 모드. 로 변경
- 프로그램 종료. 작업 관리자에서 MSSQLSERVER 서비스 재시작
- 프로그램 실행. SQL Server 인증으로 로그인.

csv 가져오기
DB 우클릭 -> 태스크 -> 데이터 가져오기 -> 데이터 원본(Flat File Source 선택) ->
대상(Microsoft OLE DB Driver for SQL Server 선택)

pip install pymssql



# django ----------------------------------------------------
command 에서...
pip install django
django-admin startproject mysite    # mysite 라는 폴더가 생성되며, 폴더 내에 파일이 자동으로 생성됨
python manage.py startapp polls     # 생성된 폴더로 이동 후 해당 명령 실행. 이후 폴더 위치 동일

mysite 폴더 내 settings.py 파일 안의 ALLOWED_HOSTS = [] 를 수정
==> ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

mysite 와 polls 를 연결 (ip, apps, db, time_zone... 수정)
mysite 폴더 내 settings.py 파일 안의 INSTALLED_APPS = [ 에 추가
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'polls.apps.PollsConfig',       # 여기 추가
]
TIME_ZONE = 'Asia/Seoul' # 한국으로 변경

sqlite 사용하겠다 명시하기
python manage.py migrate

서버 실행
python manage.py runserver 0.0.0.0:8000

실행된 페이지 확인하기
http://localhost:8000
http://localhost:8000/admin/
http://127.0.0.1:8000/admin/

서버 종료
Ctrl + c 키 눌러서 종료

관리자 계정 생성
python manage.py createsuperuser
유저명, 이메일 주소, 비번 입력하라는 대로 진행

다시 서버 실행 후 관리자 페이지에 접속해서 확인해보기

polls 폴더 안의 models.py, admin.py 에 내용 추가

python manage.py makemigrations
python manage.py migrate

서버 실행해서 관리자 페이지에서 추가한 내용 확인하기



# ubuntu ----------------------------------------------------
virtual box ubuntu 해상도 조정에 필요
apt-get install -y virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11



# lsun ----------------------------------------------------
python download.py -o D:\data\lsun_zip
python data.py export D:\data\church_outdoor_train_lmdb --out_dir D:\data\church_outdoor_train_lmdb\expanded --flat

일부만 받을 때
python download.py -o D:\data\lsun_zip -c tower
